R[write to console]: 
Attaching package: ‘dplyr’


R[write to console]: The following objects are masked from ‘package:stats’:

    filter, lag


R[write to console]: The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


[info] Parsing spec ...
[info] Parsing succeeded
[info] Building synthesizer ...
[info] Synthesizing programs ...
[info] # candidates before getting the correct solution: 0
[info] Solution found: [groupSum(@param0, sum, 4, ['2', '6'])]
====> run synthesize 020.json
# num samples per layer: 4
     Order ID   Product    Category  Amount        Date         Country
1         1.0   Carrots  Vegetables  4270.0    1/6/2012   United States
2         2.0  Broccoli  Vegetables  8239.0    1/7/2012  United Kingdom
3         3.0    Banana       Fruit   617.0    1/8/2012   United States
4         4.0    Banana       Fruit  8384.0   1/10/2012          Canada
5         5.0     Beans  Vegetables  2626.0   1/10/2012         Germany
..        ...       ...         ...     ...         ...             ...
209     209.0     Apple       Fruit  1777.0  12/28/2012          France
210     210.0     Beans  Vegetables   680.0  12/28/2012          France
211     211.0    Orange       Fruit   958.0  12/29/2012   United States
212     212.0   Carrots  Vegetables  2613.0  12/29/2012       Australia
213     213.0   Carrots  Vegetables   339.0  12/30/2012       Australia

[213 rows x 6 columns]
              c_x      c_y  c_color
1  United Kingdom  41815.0  Carrots
2     New Zealand  10332.0    Apple
3   United States  95061.0   Banana
4   United States  22363.0    Mango
# candidates before getting the correct solution: 0
## synthesize result for task 020.json
# table_prog:
  [groupSum(@param0, sum, 4, ['2', '6'])]
# vis_spec:
    {'mark': 'bar', 'encoding': {'x': {'field': 'Country', 'type': 'nominal'}, 'y': {'field': 'COL104', 'type': 'quantitative'}, 'color': {'field': 'Product', 'type': 'nominal'}}}
# time used (s): 6.4256

real	0m8.186s
user	0m7.670s
sys	0m0.360s
