R[write to console]: 
Attaching package: ‘dplyr’


R[write to console]: The following objects are masked from ‘package:stats’:

    filter, lag


R[write to console]: The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


[info] Parsing spec ...
[info] Parsing succeeded
[info] Building synthesizer ...
[info] Synthesizing programs ...
[info] # candidates before getting the correct solution: 0
[info] Solution found: [cumsum(@param0, 2)]
[info] Parsing spec ...
[info] Parsing succeeded
[info] Building synthesizer ...
[info] Synthesizing programs ...
[info] # candidates before getting the correct solution: 0
[info] Solution found: [cumsum(@param0, 2)]
====> run synthesize 001.json
# num samples per layer: 4
    Quarter  Number of Units  Actual Profits
1  Quarter1             23.0          3358.0
2  Quarter2             27.0          3829.0
3  Quarter3             15.0          2374.0
4  Quarter4             43.0          3373.0
        c_x   c_y
1  Quarter1  23.0
2  Quarter2  27.0
3  Quarter3  15.0
4  Quarter4  43.0
# candidates before getting the correct solution: 0
    Quarter  Number of Units  Actual Profits
1  Quarter1             23.0          3358.0
2  Quarter2             27.0          3829.0
3  Quarter3             15.0          2374.0
4  Quarter4             43.0          3373.0
        c_x     c_y
1  Quarter1  3358.0
2  Quarter2  3829.0
3  Quarter3  2374.0
4  Quarter4  3373.0
# candidates before getting the correct solution: 0
## synthesize result for task 001.json
# table_prog:
  [[cumsum(@param0, 2)], [cumsum(@param0, 2)]]
# vis_spec:
    {'layer': [{'mark': {'type': 'line', 'opacity': 0.7}, 'encoding': {'x': {'field': 'Quarter', 'type': 'nominal'}, 'y': {'field': 'Number of Units', 'type': 'quantitative'}, 'order': {'field': 'Quarter', 'type': 'quantitative'}}, 'transform': [{'filter': 'datum.layer_id == 0'}]}, {'mark': {'type': 'bar', 'opacity': 0.7}, 'encoding': {'x': {'field': 'Quarter', 'type': 'nominal', 'sort': None}, 'y': {'field': 'Actual Profits', 'type': 'quantitative'}}, 'transform': [{'filter': 'datum.layer_id == 1'}]}], 'resolve': {}}
# time used (s): 0.3299

real	0m1.860s
user	0m1.410s
sys	0m0.240s
