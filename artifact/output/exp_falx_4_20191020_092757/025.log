R[write to console]: 
Attaching package: ‘dplyr’


R[write to console]: The following objects are masked from ‘package:stats’:

    filter, lag


R[write to console]: The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


[info] Parsing spec ...
[info] Parsing succeeded
[info] Building synthesizer ...
[info] Synthesizing programs ...
[info] # candidates before getting the correct solution: 0
[info] Solution found: [cumsum(@param0, 2)]
[info] Parsing spec ...
[info] Parsing succeeded
[info] Building synthesizer ...
[info] Synthesizing programs ...
[info] # candidates before getting the correct solution: 0
[info] Solution found: [cumsum(@param0, 2)]
====> run synthesize 025.json
# num samples per layer: 4
       Complaint Type  Count
1           Too noisy   27.0
2          Overpriced  789.0
3   Food is tasteless   65.0
4      Food not fresh    9.0
5   Food is too salty   15.0
6           Not clean   30.0
7    Unfriendly staff   12.0
8           Wait time  109.0
9       No atmosphere   45.0
10     Small portions  621.0
                 c_x    c_y
1  Food is too salty   15.0
2      No atmosphere   45.0
3         Overpriced  789.0
4          Wait time  109.0
# candidates before getting the correct solution: 0
       Complaint Type  Count
1           Too noisy   27.0
2          Overpriced  789.0
3   Food is tasteless   65.0
4      Food not fresh    9.0
5   Food is too salty   15.0
6           Not clean   30.0
7    Unfriendly staff   12.0
8           Wait time  109.0
9       No atmosphere   45.0
10     Small portions  621.0
                 c_x     c_y
1          Wait time  1056.0
2         Overpriced   816.0
3  Food is too salty   905.0
4     Small portions  1722.0
# candidates before getting the correct solution: 0
## synthesize result for task 025.json
# table_prog:
  [[cumsum(@param0, 2)], [cumsum(@param0, 2)]]
# vis_spec:
    {'layer': [{'mark': {'type': 'bar', 'opacity': 0.7}, 'encoding': {'x': {'field': 'Complaint Type', 'type': 'nominal', 'sort': None}, 'y': {'field': 'Count', 'type': 'quantitative'}}, 'transform': [{'filter': 'datum.layer_id == 0'}]}, {'mark': {'type': 'line', 'opacity': 0.7}, 'encoding': {'x': {'field': 'Complaint Type', 'type': 'nominal'}, 'y': {'field': 'cumsum', 'type': 'quantitative'}, 'order': {'field': 'Complaint Type', 'type': 'quantitative'}}, 'transform': [{'filter': 'datum.layer_id == 1'}]}], 'resolve': {}}
# time used (s): 0.3025

real	0m1.853s
user	0m1.420s
sys	0m0.280s
