R[write to console]: 
Attaching package: ‘dplyr’


R[write to console]: The following objects are masked from ‘package:stats’:

    filter, lag


R[write to console]: The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


[info] Parsing spec ...
[info] Parsing succeeded
[info] Building synthesizer ...
[info] Synthesizing programs ...
[info] # candidates before getting the correct solution: 0
[info] Solution found: [groupSum(@param0, mean, 1, ['2'])]
[info] Parsing spec ...
[info] Parsing succeeded
[info] Building synthesizer ...
[info] Synthesizing programs ...
[info] Solution not found!
[info] Synthesizing programs ...
[info] # candidates before getting the correct solution: 2
[info] Solution found: [cumsum(@param0, 1), mutate(cumsum(@param0, 1), -, 3, 1)]
====> run synthesize 003.json
# num samples per layer: 4
    Net Cash Flow  Month
1         80000.0  Start
2         -5003.0    Apr
3        -16700.0    May
4         48802.0    Jun
5        -11198.0    Jul
6        -35260.0    Aug
7         18220.0    Sep
8        -23840.0    Oct
9         43250.0    Nov
10       -18280.0    Dec
11        26670.0    Jan
12        15000.0    Feb
13        24750.0    Mar
   c_x      c_y  c_color
1  Nov  43250.0  43250.0
2  Oct -23840.0 -23840.0
3  Sep  18220.0  18220.0
4  Jan  26670.0  26670.0
# candidates before getting the correct solution: 0
===> the program is not consistent with the trace
 [groupSum(@param0, mean, 1, ['2'])]
===> continue...
    Net Cash Flow  Month
1         80000.0  Start
2         -5003.0    Apr
3        -16700.0    May
4         48802.0    Jun
5        -11198.0    Jul
6        -35260.0    Aug
7         18220.0    Sep
8        -23840.0    Oct
9         43250.0    Nov
10       -18280.0    Dec
11        26670.0    Jan
12        15000.0    Feb
13        24750.0    Mar
   c_x      c_y      c_y2  c_color
1  Apr  80000.0   74997.0  -5003.0
2  Aug  95901.0   60641.0 -35260.0
3  Jan  79991.0  106661.0  26670.0
4  Jun  58297.0  107099.0  48802.0
# candidates before getting the correct solution: 2
## synthesize result for task 003.json
# table_prog:
  [cumsum(@param0, 1), mutate(cumsum(@param0, 1), -, 3, 1)]
# vis_spec:
    {'mark': {'type': 'bar', 'opacity': 0.8}, 'encoding': {'x': {'field': 'Month', 'type': 'nominal', 'sort': None}, 'y': {'field': 'mutate_a', 'type': 'quantitative', 'stack': None}, 'y2': {'field': 'cumsum'}, 'color': {'field': 'Net Cash Flow', 'type': 'nominal'}}}
# time used (s): 2.1852

real	0m3.714s
user	0m3.230s
sys	0m0.330s
