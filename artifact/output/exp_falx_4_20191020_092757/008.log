R[write to console]: 
Attaching package: ‘dplyr’


R[write to console]: The following objects are masked from ‘package:stats’:

    filter, lag


R[write to console]: The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


[info] Parsing spec ...
[info] Parsing succeeded
[info] Building synthesizer ...
[info] Synthesizing programs ...
[info] Solution not found!
[info] Synthesizing programs ...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 4 rows:
* 13, 17
* 15, 19

Call `rlang::last_error()` to see a backtrace

[error] Error in interpreting spread...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 4 rows:
* 5, 9
* 7, 11

Call `rlang::last_error()` to see a backtrace

[error] Error in interpreting spread...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 4 rows:
* 5, 9
* 7, 11

Call `rlang::last_error()` to see a backtrace

[error] Error in interpreting spread...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 4 rows:
* 9, 13
* 11, 15

Call `rlang::last_error()` to see a backtrace

[error] Error in interpreting spread...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 4 rows:
* 9, 13
* 11, 15

Call `rlang::last_error()` to see a backtrace

[error] Error in interpreting spread...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 4 rows:
* 5, 9
* 7, 11

Call `rlang::last_error()` to see a backtrace

[error] Error in interpreting spread...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 4 rows:
* 9, 13
* 11, 15

Call `rlang::last_error()` to see a backtrace

[error] Error in interpreting spread...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 4 rows:
* 5, 9
* 7, 11

Call `rlang::last_error()` to see a backtrace

[error] Error in interpreting spread...
[info] # candidates before getting the correct solution: 6
[info] Solution found: [gatherNeg(@param0, ['-1']), spread(gatherNeg(@param0, ['-1']), 1, 3)]
[info] Parsing spec ...
[info] Parsing succeeded
[info] Building synthesizer ...
[info] Synthesizing programs ...
[info] Solution not found!
[info] Synthesizing programs ...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 4 rows:
* 1, 5
* 3, 7

Call `rlang::last_error()` to see a backtrace

[error] Error in interpreting spread...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 4 rows:
* 13, 17
* 15, 19

Call `rlang::last_error()` to see a backtrace

[error] Error in interpreting spread...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 4 rows:
* 9, 13
* 11, 15

Call `rlang::last_error()` to see a backtrace

[error] Error in interpreting spread...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 4 rows:
* 9, 13
* 11, 15

Call `rlang::last_error()` to see a backtrace

[error] Error in interpreting spread...
[info] # candidates before getting the correct solution: 1
[info] Solution found: [gatherNeg(@param0, ['-1']), spread(gatherNeg(@param0, ['-1']), 1, 3)]
====> run synthesize 008.json
# num samples per layer: 4
         Value      Y1      Y2      Y3      Y4      Y5
1        means  0.5200  0.5700  0.6000  0.6300  0.6300
2       stddev  0.1328  0.1321  0.1303  0.1266  0.1225
3  upper range  0.6600  0.7000  0.7300  0.7500  0.7500
4  lower range  0.3900  0.4400  0.4700  0.5000  0.5100
  c_x   c_y
1  Y1  0.52
2  Y2  0.57
3  Y4  0.63
4  Y5  0.63
# candidates before getting the correct solution: 6
         Value      Y1      Y2      Y3      Y4      Y5
1        means  0.5200  0.5700  0.6000  0.6300  0.6300
2       stddev  0.1328  0.1321  0.1303  0.1266  0.1225
3  upper range  0.6600  0.7000  0.7300  0.7500  0.7500
4  lower range  0.3900  0.4400  0.4700  0.5000  0.5100
  c_x   c_y  c_y2
1  Y2  0.44  0.70
2  Y3  0.47  0.73
3  Y4  0.50  0.75
4  Y5  0.51  0.75
# candidates before getting the correct solution: 1
## synthesize result for task 008.json
# table_prog:
  [[gatherNeg(@param0, ['-1']), spread(gatherNeg(@param0, ['-1']), 1, 3)], [gatherNeg(@param0, ['-1']), spread(gatherNeg(@param0, ['-1']), 1, 3)]]
# vis_spec:
    {'layer': [{'mark': {'type': 'line', 'opacity': 0.7}, 'encoding': {'x': {'field': 'KEY', 'type': 'nominal'}, 'y': {'field': 'means', 'type': 'quantitative'}, 'order': {'field': 'KEY', 'type': 'quantitative'}}, 'transform': [{'filter': 'datum.layer_id == 0'}]}, {'mark': {'type': 'area', 'opacity': 0.7}, 'encoding': {'x': {'field': 'KEY', 'type': 'nominal'}, 'y': {'field': 'lower range', 'type': 'quantitative'}, 'y2': {'field': 'upper range'}}, 'transform': [{'filter': 'datum.layer_id == 1'}]}], 'resolve': {}}
# time used (s): 23.4263

real	0m24.956s
user	0m24.400s
sys	0m0.290s
