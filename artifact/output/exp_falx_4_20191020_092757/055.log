R[write to console]: 
Attaching package: ‘dplyr’


R[write to console]: The following objects are masked from ‘package:stats’:

    filter, lag


R[write to console]: The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


[info] Parsing spec ...
[info] Parsing succeeded
[info] Building synthesizer ...
[info] Synthesizing programs ...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 6 rows:
* 1, 5
* 9, 13
* 2, 14

Call `rlang::last_error()` to see a backtrace

[error] Error in interpreting spread...
[info] Solution not found!
[info] Synthesizing programs ...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 6 rows:
* 1, 5
* 9, 13
* 2, 14

Call `rlang::last_error()` to see a backtrace

[error] Error in interpreting spread...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 6 rows:
* 1, 5
* 9, 13
* 2, 14

Call `rlang::last_error()` to see a backtrace

R[write to console]: In addition: 
R[write to console]: Warning message:

R[write to console]: NAs introduced by coercion 

[error] Error in interpreting spread...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 6 rows:
* 1, 5
* 9, 13
* 2, 14

Call `rlang::last_error()` to see a backtrace

R[write to console]: In addition: 
R[write to console]: Warning messages:

R[write to console]: 1: NAs introduced by coercion 

R[write to console]: 2: NAs introduced by coercion 

R[write to console]: 3: NAs introduced by coercion 

R[write to console]: 4: NAs introduced by coercion 

R[write to console]: 5: NAs introduced by coercion 

R[write to console]: 6: NAs introduced by coercion 

R[write to console]: 7: NAs introduced by coercion 

[error] Error in interpreting spread...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 6 rows:
* 1, 5
* 9, 13
* 2, 14

Call `rlang::last_error()` to see a backtrace

[error] Error in interpreting spread...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 6 rows:
* 1, 5
* 9, 13
* 2, 14

Call `rlang::last_error()` to see a backtrace

[error] Error in interpreting spread...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 6 rows:
* 1, 5
* 9, 13
* 2, 14

Call `rlang::last_error()` to see a backtrace

[error] Error in interpreting spread...
R[write to console]: Error: Each row of output must be identified by a unique combination of keys.
Keys are shared for 4 rows:
* 1, 5
* 9, 13

Call `rlang::last_error()` to see a backtrace

R[write to console]: In addition: 
R[write to console]: There were 24 warnings (use warnings() to see them)
R[write to console]: 

[error] Error in interpreting spread...
[info] # candidates before getting the correct solution: 11
[info] Solution found: [separate(@param0, 2), spread(separate(@param0, 2), 2, 4)]
====> run synthesize 055.json
# num samples per layer: 4
   id group_measure  value
1   A           a_c    2.0
2   B           a_c    2.0
3   C           a_c    3.0
4   D           a_c    5.0
5   A           b_c    2.0
6   B           b_c    5.0
7   C           b_c    5.0
8   D           b_c    4.0
9   A           a_d    4.0
10  B           a_d    1.0
11  C           a_d    2.0
12  D           a_d    1.0
13  A           b_d    4.0
14  B           b_d    2.0
15  C           b_d    4.0
16  D           b_d    3.0
   c_x  c_y c_column
1  2.0  2.0        c
2  3.0  1.0        d
3  4.0  2.0        d
4  4.0  5.0        c
# candidates before getting the correct solution: 11
## synthesize result for task 055.json
# table_prog:
  [separate(@param0, 2), spread(separate(@param0, 2), 2, 4)]
# vis_spec:
    {'mark': 'point', 'encoding': {'x': {'field': 'b', 'type': 'quantitative'}, 'y': {'field': 'a', 'type': 'quantitative'}, 'column': {'field': 'COL549', 'type': 'nominal'}}}
# time used (s): 6.3982

real	0m7.896s
user	0m7.510s
sys	0m0.260s
