R[write to console]: 
Attaching package: ‘dplyr’


R[write to console]: The following objects are masked from ‘package:stats’:

    filter, lag


R[write to console]: The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


[info] Parsing spec ...
[info] Parsing succeeded
[info] Building synthesizer ...
[info] Synthesizing programs ...
[info] # candidates before getting the correct solution: 0
[info] Solution found: [gather(@param0, ['2', '3', '4'])]
[info] Parsing spec ...
[info] Parsing succeeded
[info] Building synthesizer ...
[info] Synthesizing programs ...
[info] Solution not found!
[info] Synthesizing programs ...
[info] # candidates before getting the correct solution: 11
[info] Solution found: [mutate(@param0, +, 3, 2), gatherNeg(mutate(@param0, +, 3, 2), ['-1', '-3', '-4'])]
====> run synthesize 013.json
# num samples per layer: 4
  Value  alpha  beta  gamma  Totals
1     A    2.0   2.0    3.0     7.0
2     B    2.0   3.0    3.0     8.0
3     C    3.0   3.0    3.0     9.0
4     D    3.0   4.0    2.0     9.0
5     E    4.0   3.0    2.0     9.0
  c_x  c_y c_color
1   C  3.0   gamma
2   A  2.0    beta
3   D  3.0   alpha
4   D  2.0   gamma
# candidates before getting the correct solution: 0
  Value  alpha  beta  gamma  Totals
1     A    2.0   2.0    3.0     7.0
2     B    2.0   3.0    3.0     8.0
3     C    3.0   3.0    3.0     9.0
4     D    3.0   4.0    2.0     9.0
5     E    4.0   3.0    2.0     9.0
  c_x  c_y
1   A  2.0
2   C  9.0
3   B  5.0
4   B  8.0
# candidates before getting the correct solution: 11
## synthesize result for task 013.json
# table_prog:
  [[gather(@param0, ['2', '3', '4'])], [mutate(@param0, +, 3, 2), gatherNeg(mutate(@param0, +, 3, 2), ['-1', '-3', '-4'])]]
# vis_spec:
    {'layer': [{'mark': {'type': 'bar', 'opacity': 0.7}, 'encoding': {'x': {'field': 'Value', 'type': 'nominal'}, 'y': {'field': 'VALUE', 'type': 'quantitative'}, 'color': {'field': 'KEY', 'type': 'nominal'}}, 'transform': [{'filter': 'datum.layer_id == 0'}]}, {'mark': {'type': 'point', 'opacity': 0.7}, 'encoding': {'x': {'field': 'Value', 'type': 'nominal'}, 'y': {'field': 'VALUE', 'type': 'quantitative'}}, 'transform': [{'filter': 'datum.layer_id == 1'}]}], 'resolve': {}}
# time used (s): 39.3721

real	0m40.820s
user	0m40.320s
sys	0m0.350s
